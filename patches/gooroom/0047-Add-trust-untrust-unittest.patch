From 75dcb1dcc4048cf63f7693cdfeaca7419fa1e729 Mon Sep 17 00:00:00 2001
From: JunSung Choi <junsungc@gooroom.kr>
Date: Sat, 25 May 2019 21:19:06 +0900
Subject: [PATCH 47/63] Add trust/untrust unittest

---
 .../loader/resource_dispatcher_host_unittest.cc    | 81 ++++++++++++++++++++++
 content/test/BUILD.gn                              |  6 ++
 2 files changed, 87 insertions(+)

diff --git a/content/browser/loader/resource_dispatcher_host_unittest.cc b/content/browser/loader/resource_dispatcher_host_unittest.cc
index d06ee90f6..8079b4e65 100644
--- a/content/browser/loader/resource_dispatcher_host_unittest.cc
+++ b/content/browser/loader/resource_dispatcher_host_unittest.cc
@@ -8,6 +8,28 @@
 #include <utility>
 #include <vector>
 
+#if defined(GOOROOM_BUILD)
+#include "base/path_service.h"
+#include "gooroom/base/gooroom_base.h"
+#include "gooroom/browser/gooroom_pref.h"
+#include "gooroom/browser/gooroom_url_filter_impl.h"
+
+#include "base/command_line.h"
+#include "base/path_service.h"
+#include "base/syslog_logging.h"
+
+#include "chrome/browser/browser_process.h"
+#include "chrome/browser/profiles/profile.h"
+#include "chrome/browser/profiles/profile_manager.h"
+#include "chrome/common/chrome_constants.h"
+#include "chrome/common/chrome_switches.h"
+
+#include "components/prefs/json_pref_store.h"
+#include "components/prefs/pref_registry_simple.h"
+#include "components/prefs/pref_service.h"
+#include "components/prefs/pref_service_factory.h"
+#endif
+
 #include "base/bind.h"
 #include "base/files/file_path.h"
 #include "base/files/file_util.h"
@@ -2220,6 +2242,65 @@ TEST_P(ResourceDispatcherHostTest, UnknownURLScheme) {
   CompleteFailingMainResourceRequest(invalid_scheme_url, expected_error_code);
 }
 
+//GOOROOM
+TEST_P(ResourceDispatcherHostTest, TrustUntrustBrowsingTest) {
+  const char kPolicyGooroomWhiteList[] = "gooroom.policy.whitelist";
+  std::unique_ptr<PrefService> pref_;
+  EXPECT_EQ(0, host_.pending_requests());
+
+  HandleScheme("http");
+
+  ExternalProtocolBrowserClient test_client;
+  ContentBrowserClient* old_client = SetBrowserClientForTesting(&test_client);
+
+  base::FilePath path("/usr/share/gooroom/browser/policies/mainpref.json");
+
+  PrefRegistrySimple* registry = new PrefRegistrySimple;
+  registry->RegisterListPref(kPolicyGooroomWhiteList);
+
+  PrefServiceFactory prefServiceFactory;
+  scoped_refptr<base::SequencedTaskRunner> refTaskRunner =
+      base::CreateSequencedTaskRunnerWithTraits({base::MayBlock()});
+  prefServiceFactory.SetUserPrefsFile(path, refTaskRunner.get());
+  pref_ = prefServiceFactory.Create(registry);
+
+  // check a whilte list and make url filter from the list ===========
+  const PrefService::Preference* p =
+      pref_->FindPreference(gooroom::kPolicyGooroomWhiteList);
+  GooroomUrlFilterImpl* pfilterImpl = new GooroomUrlFilterImpl();
+  if (p != nullptr)
+    pfilterImpl->setWhiteList(p->GetValue());
+  base::GetGooroomBase()->setUrlFilter(pfilterImpl);
+  base::GetGooroomBase()->setTrustMode(true);
+
+
+  const GURL invalid_scheme_url = GURL("http://www.naver.com");
+
+  base::FilePath home_path_dir;
+  base::PathService::Get(base::DIR_HOME, &home_path_dir);
+
+  base::FilePath trust_config_dir(home_path_dir.AppendASCII(".config/gooroom/trust"));
+
+  base::CommandLine* command_line = base::CommandLine::ForCurrentProcess();
+  command_line->AppendSwitchPath(switches::kUserDataDir, trust_config_dir);
+
+
+  base::GooroomUrlFilter* pFilter = base::GetGooroomBase()->getUrlFilter();
+
+  if (!pFilter) ASSERT_TRUE(false);
+
+  int expected_error_code = net::ERR_INVALID_URL;
+
+  CompleteFailingMainResourceRequest(invalid_scheme_url, expected_error_code);
+
+  base::FilePath untrust_config_dir(home_path_dir.AppendASCII(".config/gooroom/untrust"));
+  command_line->AppendSwitchPath(switches::kUserDataDir, untrust_config_dir);
+
+  expected_error_code = net::ERR_DIFF_PERMISSION;
+
+  CompleteFailingMainResourceRequest(invalid_scheme_url, expected_error_code);
+}
+
 // Request a very large detachable resource and cancel part way. Some of the
 // data should have been sent to the renderer, but not all.
 TEST_P(ResourceDispatcherHostTest, DataSentBeforeDetach) {
diff --git a/content/test/BUILD.gn b/content/test/BUILD.gn
index 9e3ec8444..776bc0e4f 100644
--- a/content/test/BUILD.gn
+++ b/content/test/BUILD.gn
@@ -33,6 +33,12 @@ jumbo_static_library("test_support") {
   }
 
   sources = [
+    "//chrome/common/chrome_switches.cc",
+    "//chrome/common/chrome_switches.h",
+    "//gooroom/browser/gooroom_url_filter_impl.cc",
+    "//gooroom/browser/gooroom_url_filter_impl.h",
+    "//components/policy/core/browser/url_blacklist_manager.h",
+    "//components/policy/core/browser/url_blacklist_manager.cc",
     "../browser/accessibility/accessibility_event_recorder.cc",
     "../browser/accessibility/accessibility_event_recorder.h",
     "../browser/accessibility/accessibility_event_recorder_mac.mm",
-- 
2.11.0

