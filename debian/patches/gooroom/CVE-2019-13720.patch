commit 6a2e670a243b815cf043f8da4d26ecb9a64d307b
Author: Hongchan Choi <hongchan@chromium.org>
Date:   Wed Oct 30 02:47:57 2019 +0000

    Obtain graph/process lock when nullifying the buffer in Reverb
    
    When the buffer is set to `null` while there is an active buffer
    within a reverb object, SetBuffer() function can prematurely
    nullify the `reverb_` and `shared_buffer_` while it is still
    being accessed by the rendering thread.
    
    This CL adds two locks (graph lock and process lock) when the
    buffer gets nullified to ensure the synchronization between
    two threads.
    
    Change-Id: I8f501b6a16b3c7e16db767e0b279a1a53d6eb290
    Bug: 1019226
    Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/1888103
    Commit-Queue: Hongchan Choi <hongchan@chromium.org>
    Reviewed-by: Robert Sesek <rsesek@chromium.org>
    Cr-Commit-Position: refs/heads/master@{#710627}

diff --git a/third_party/blink/renderer/modules/webaudio/convolver_node.cc b/third_party/blink/renderer/modules/webaudio/convolver_node.cc
index c67a0badb183..ce19fe6675c1 100644
--- a/third_party/blink/renderer/modules/webaudio/convolver_node.cc
+++ b/third_party/blink/renderer/modules/webaudio/convolver_node.cc
@@ -103,6 +103,8 @@ void ConvolverHandler::SetBuffer(AudioBuffer* buffer,
   DCHECK(IsMainThread());
 
   if (!buffer) {
+    BaseAudioContext::GraphAutoLocker context_locker(Context());
+    MutexLocker locker(process_lock_);
     reverb_.reset();
     shared_buffer_ = nullptr;
     return;
