From d69935ab3a6879e611556fe41454821c67309c86 Mon Sep 17 00:00:00 2001
From: JunSung Choi <junsungc@gooroom.kr>
Date: Sat, 25 May 2019 21:35:28 +0900
Subject: [PATCH 60/63] Migrate verifySign module. Add DIR path on
 GRMCODE=050001 syslog. Trust browser check only trust policies sign, Untrust
 browser check only untrust policies sign.

---
 build/config/linux/gtk3/BUILD.gn             |   2 +-
 gooroom/BUILD.gn                             |  19 -----
 gooroom/app/gooroom_exe_main_aura.cc         |  97 +------------------------
 gooroom/browser/BUILD.gn                     |  10 +++
 gooroom/browser/gooroom_pref.cc              | 102 ++++++++++++++++++++++++++-
 gooroom/{app => browser}/verify_signature.cc |   0
 gooroom/{app => browser}/verify_signature.h  |   0
 7 files changed, 113 insertions(+), 117 deletions(-)
 rename gooroom/{app => browser}/verify_signature.cc (100%)
 rename gooroom/{app => browser}/verify_signature.h (100%)

diff --git a/build/config/linux/gtk3/BUILD.gn b/build/config/linux/gtk3/BUILD.gn
index 1e2285aa2..dc39edc03 100644
--- a/build/config/linux/gtk3/BUILD.gn
+++ b/build/config/linux/gtk3/BUILD.gn
@@ -28,7 +28,7 @@ group("gtk3") {
   visibility = [
     "//build/config/linux/gtk",
     "//chrome/browser/ui/libgtkui:*",
-    "//gooroom:gooroom_initial",
+    "//gooroom/browser:gooroom_browser",
   ]
   public_configs = [ ":gtk3_internal_config" ]
 }
diff --git a/gooroom/BUILD.gn b/gooroom/BUILD.gn
index d5529b63a..c20d46467 100644
--- a/gooroom/BUILD.gn
+++ b/gooroom/BUILD.gn
@@ -20,7 +20,6 @@ import("//media/media_options.gni")
 import("//third_party/widevine/cdm/widevine.gni")
 import("//tools/resources/generate_resource_whitelist.gni")
 import("//v8/gni/v8.gni")
-import("//build/config/linux/gtk/gtk.gni")
 
 if (is_android) {
   import("//build/config/android/rules.gni")
@@ -136,14 +135,6 @@ if (!is_android && !is_mac) {
       data_deps = []
 
       if (is_linux) {
-
-        if (host_cpu != "arm") {
-          #include_dirs = [ "/usr/include/gooroom" ]
-          libs = [ "/usr/lib/x86_64-linux-gnu/libgrmpycaller.so"]
-          libs += [ "/usr/lib/x86_64-linux-gnu/libcrypto.so.1.1" ]
-        } else {
-          libs = [ "/usr/lib/arm-linux-gnueabihf/libcrypto.so.1.1" ]
-        }
         sources += [
           #"app/chrome_dll_resource.h",
           #"app/chrome_main.cc",
@@ -159,8 +150,6 @@ if (!is_android && !is_mac) {
           "app/gooroom_main.cc",
           "app/gooroom_main_delegate.h",
           "app/gooroom_main_delegate.cc",
-          "app/verify_signature.h",
-          "app/verify_signature.cc",
         ]
 
         deps += [
@@ -176,8 +165,6 @@ if (!is_android && !is_mac) {
           "//content/public/app:both",
           "//content/public/common:service_names",
 
-          "//chrome/browser/ui/libgtkui",
-
           # For headless mode.
           "//headless:headless_shell_lib",
           "//services/service_manager/embedder",
@@ -223,10 +210,6 @@ if (!is_android && !is_mac) {
       #public_deps += [ "packed_resources" ]
       public_deps += [ "//chrome:packed_resources" ]
 
-      deps += [
-        "//build/config/linux/gtk3",
-      ]
-
       # Only ChromeOS has precompiled Flash that needs to get copied to the output
       # directory. On other platforms, Flash is either component-updated only or
       # not supported at all.
@@ -274,8 +257,6 @@ if (!is_android && !is_mac) {
         "browser/gooroom_browser_extra_parts_security.h",
 
         # for commit #4
-        "browser/gooroom_pref.cc",
-        "browser/gooroom_pref.h",
         "browser/gooroom_url_filter_impl.cc",
         "browser/gooroom_url_filter_impl.h", 
 
diff --git a/gooroom/app/gooroom_exe_main_aura.cc b/gooroom/app/gooroom_exe_main_aura.cc
index 0b06f47fd..3236d3bb0 100644
--- a/gooroom/app/gooroom_exe_main_aura.cc
+++ b/gooroom/app/gooroom_exe_main_aura.cc
@@ -3,111 +3,16 @@
 // found in the LICENSE file.
 
 #include <stdlib.h>
-#include <string.h>
-#include <gtk/gtk.h>
-#include <fstream>
-
-#include "build/build_config.h"
-#include "verify_signature.h"
-#include "base/syslog_logging.h"
 
 // The entry point for all invocations of Chromium, browser and renderer. On
 // windows, this does nothing but load chrome.dll and invoke its entry point in
 // order to make it easy to update the app from GoogleUpdate. We don't need
 // that extra layer with on linux.
 
-using std::string;
-
 extern "C" {
 int GooroomMain(int argc, const char** argv);
 }
 
-bool is_file_exist(const char *fileName)
-{
-    std::ifstream infile(fileName);
-    return infile.good();
-}
-
-// verify a sing is valid
-bool verifySign(int argc, const char** argv) {
-  int ret_code;
-  int i;
-  ret_code = is_onlineuser();
-  if (ret_code == LOCAL_USER) {
-    char buff[100] = {0,};
-    snprintf(buff, sizeof(buff), "SIGN verified ret_code=$(%d)", ret_code);
-    SYSLOG(INFO) << buff << " GRMCODE=050001";
-    SYSLOG(INFO) << "SIGN verified ok GRMCODE=050002";
-    return true;
-  }
-  bool validSign = true;
-  string* verifySign = new string[5] { "/usr/share/gooroom/browser/policies/mainpref.json",
-                                       "/usr/share/gooroom/browser/policies/trust/managed/policy.json",
-                                       "/usr/share/gooroom/browser/policies/trust/managed/ui-policy.json",
-                                       "/usr/share/gooroom/browser/policies/untrust/managed/policy.json",
-                                       "/usr/share/gooroom/browser/policies/untrust/managed/ui-policy.json" };
-  for(i=0;i<5;i++){
-    if (is_file_exist(verifySign[i].c_str())){
-      ret_code = verify_signature(verifySign[i].c_str());
-      char buff[100] = {0,};
-      snprintf(buff, sizeof(buff), "SIGN verified ret_code=$(%d)", ret_code);
-      SYSLOG(INFO) << buff << " GRMCODE=050001";
-    }
-    else
-      continue;
-
-    validSign = ret_code == 0 || ret_code == 1;
-    if(validSign == 0)
-      break;
-  }
-
-  if(validSign)
-    SYSLOG(INFO) << "SIGN verified ok GRMCODE=050002";
-  else
-    SYSLOG(INFO) << "SIGN verified error GRMCODE=050003";
-  return validSign;
-}
-
-void noVerifySignAlarm(int argc, char** argv) {
-    GtkWidget *window;
-    GtkWidget *label;
-
-    gtk_init(&argc, &argv);
-
-    /* Create the main, top level window */
-    window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
-
-    /* Give it the title */
-    gtk_window_set_title(GTK_WINDOW(window), "Info Bars");
-    gtk_window_set_default_size(GTK_WINDOW(window), 230, 50);
-
-    /*
-    ** Map the destroy signal of the window to gtk_main_quit;
-    ** When the window is about to be destroyed, we get a notification and
-    ** stop the main GTK+ loop by returning 0
-    */
-    g_signal_connect(window, "destroy", G_CALLBACK(gtk_main_quit), NULL);
-
-    label = gtk_label_new("Gooroom-Browser : No sign verify. Check gooroom-agent service.");
-
-    /* Plot the label onto the main window */
-    gtk_container_add(GTK_CONTAINER(window), label);
-
-    /* Make sure that everything, window and label, are visible */
-    gtk_widget_show_all(window);
-
-    /*
-    ** Start the main loop, and do nothing (block) until
-    ** the application is closed
-    */
-    gtk_main();
-}
-
 int main(int argc, char** argv) {
-
-  bool validSign = verifySign(argc,(const char**) argv);
-  if ( validSign ) return GooroomMain(argc, (const char**) argv);
-  else
-    noVerifySignAlarm(argc, argv);
-  return 0;
+  return GooroomMain(argc, (const char**) argv);
 }
diff --git a/gooroom/browser/BUILD.gn b/gooroom/browser/BUILD.gn
index e07c4b592..e53597ce1 100644
--- a/gooroom/browser/BUILD.gn
+++ b/gooroom/browser/BUILD.gn
@@ -2,6 +2,13 @@ import("//chrome/chrome_paks.gni")
 import("//build/util/branding.gni")
 
 static_library("gooroom_browser") {
+  if (host_cpu != "arm") {
+    libs = [ "/usr/lib/x86_64-linux-gnu/libgrmpycaller.so"]
+    libs += [ "/usr/lib/x86_64-linux-gnu/libcrypto.so.1.1" ]
+  } else {
+    libs = [ "/usr/lib/arm-linux-gnueabihf/libcrypto.so.1.1" ]
+  }
+
   sources = [
     "gooroom_browser_extra_parts_security.cc",
     "gooroom_browser_extra_parts_security.h",
@@ -13,6 +20,8 @@ static_library("gooroom_browser") {
     "gooroom_pref.h",
     "gooroom_url_filter_impl.cc",
     "gooroom_url_filter_impl.h",
+    "verify_signature.cc",
+    "verify_signature.h",
     "dgw/disable_google_warning.cc",
     "dgw/disable_google_warning.h",
     "odf/odf_extension_util.cc",
@@ -21,5 +30,6 @@ static_library("gooroom_browser") {
 
   deps = [
     "//chrome/browser:browser",
+    "//build/config/linux/gtk3",
   ]
 }
diff --git a/gooroom/browser/gooroom_pref.cc b/gooroom/browser/gooroom_pref.cc
index ac9eef74d..73a1931b7 100644
--- a/gooroom/browser/gooroom_pref.cc
+++ b/gooroom/browser/gooroom_pref.cc
@@ -1,5 +1,9 @@
 #include "gooroom_pref.h"
 
+#include <fstream>
+#include <gtk/gtk.h>
+
+#include "verify_signature.h"
 #include "gooroom/base/gooroom_base.h"
 #include "gooroom/browser/gooroom_url_filter_impl.h"
 
@@ -20,6 +24,95 @@
 
 namespace gooroom {
 
+using std::string;
+
+bool is_file_exist(const char *fileName)
+{
+    std::ifstream infile(fileName);
+    return infile.good();
+}
+
+// verify a sing is valid
+bool verifySign() {
+  int ret_code;
+  int i;
+  ret_code = is_onlineuser();
+  if (ret_code == LOCAL_USER) {
+    char buff[100] = {0,};
+    snprintf(buff, sizeof(buff), "SIGN verified ret_code=$(%d)", ret_code);
+    SYSLOG(INFO) << buff << " GRMCODE=050001";
+    SYSLOG(INFO) << "SIGN verified ok GRMCODE=050002";
+    return true;
+  }
+  bool validSign = true;
+  string* verifySignDir = new string[5] { "/usr/share/gooroom/browser/policies/mainpref.json",
+                                       "/usr/share/gooroom/browser/policies/trust/managed/policy.json",
+                                       "/usr/share/gooroom/browser/policies/trust/managed/ui-policy.json",
+                                       "/usr/share/gooroom/browser/policies/untrust/managed/policy.json",
+                                       "/usr/share/gooroom/browser/policies/untrust/managed/ui-policy.json" };
+  for(i=0;i<5;i++){
+    if (base::GetGooroomBase()->isTrustMode()) {
+      if (i==3 || i==4)
+        continue;
+    } else {
+      if (i==1 || i==2)
+        continue;
+    }
+    if (is_file_exist(verifySignDir[i].c_str())) {
+      ret_code = verify_signature(verifySignDir[i].c_str());
+      char buff[100] = {0,};
+      snprintf(buff, sizeof(buff), "$(%s) SIGN verified ret_code=$(%d)", verifySignDir[i].c_str(), ret_code);
+
+      SYSLOG(INFO) << buff << " GRMCODE=050001";
+    }
+    else
+      continue;
+
+    validSign = ret_code == 0 || ret_code == 1;
+    if(validSign == 0)
+      break;
+  }
+
+  if(validSign)
+    SYSLOG(INFO) << "SIGN verified ok GRMCODE=050002";
+  else
+    SYSLOG(INFO) << "SIGN verified error GRMCODE=050003";
+  return validSign;
+}
+
+void noVerifySignAlarm() {
+    GtkWidget *window;
+    GtkWidget *label;
+
+    /* Create the main, top level window */
+    window = gtk_window_new(GTK_WINDOW_TOPLEVEL);
+
+    /* Give it the title */
+    gtk_window_set_title(GTK_WINDOW(window), "Info Bars");
+    gtk_window_set_default_size(GTK_WINDOW(window), 230, 50);
+
+    /*
+    ** Map the destroy signal of the window to gtk_main_quit;
+    ** When the window is about to be destroyed, we get a notification and
+    ** stop the main GTK+ loop by returning 0
+    */
+    g_signal_connect(window, "destroy", G_CALLBACK(gtk_main_quit), NULL);
+
+    label = gtk_label_new("Gooroom-Browser : No sign verify. Check gooroom-agent service.");
+
+    /* Plot the label onto the main window */
+    gtk_container_add(GTK_CONTAINER(window), label);
+
+    /* Make sure that everything, window and label, are visible */
+    gtk_widget_show_all(window);
+
+    /*
+    ** Start the main loop, and do nothing (block) until
+    ** the application is closed
+    */
+    gtk_main();
+}
+
 GooroomPref* g_gooroom = NULL;
 
 GooroomPref::GooroomPref() {}
@@ -136,7 +229,14 @@ void GooroomPref::setup() {
     execv(exe_path.c_str(), (char**)rerunoption);
     exit(0);
   }
-  // test args
+
+  // Gooroom-Browser policy Sign module
+  bool validSign = verifySign();
+  if ( validSign ) return;
+  else {
+    noVerifySignAlarm();
+	exit(0);
+  }
 }
 
 bool GooroomPref::useWebSocket() {
diff --git a/gooroom/app/verify_signature.cc b/gooroom/browser/verify_signature.cc
similarity index 100%
rename from gooroom/app/verify_signature.cc
rename to gooroom/browser/verify_signature.cc
diff --git a/gooroom/app/verify_signature.h b/gooroom/browser/verify_signature.h
similarity index 100%
rename from gooroom/app/verify_signature.h
rename to gooroom/browser/verify_signature.h
-- 
2.11.0

