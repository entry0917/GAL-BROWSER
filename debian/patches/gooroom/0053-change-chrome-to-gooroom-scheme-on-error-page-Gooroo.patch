From 8cf262b25c4d8760665901fde6bca6e575b52c0c Mon Sep 17 00:00:00 2001
From: junsungc <junsungc@gooroom.kr>
Date: Thu, 5 Sep 2019 17:40:01 +0900
Subject: [PATCH 53/78] change chrome to gooroom scheme on error page [Gooroom 
 Bug Tracking System - 0000400] change chrome to gooroom scheme on 
 content-settings bubble model

---
 .../content_settings/content_setting_bubble_model.cc   |  8 ++++++++
 components/error_page/common/localized_error.cc        | 10 +++++++++-
 2 files changed, 17 insertions(+), 1 deletion(-)

diff --git a/chrome/browser/ui/content_settings/content_setting_bubble_model.cc b/chrome/browser/ui/content_settings/content_setting_bubble_model.cc
index f6e95a30995f..0d794b7be10b 100644
--- a/chrome/browser/ui/content_settings/content_setting_bubble_model.cc
+++ b/chrome/browser/ui/content_settings/content_setting_bubble_model.cc
@@ -9,6 +9,7 @@
 #include <memory>
 #include <utility>
 
+#include "gooroom/URLRewrite/gooroom_url_rewrite.h"
 #include "base/bind.h"
 #include "base/command_line.h"
 #include "base/feature_list.h"
@@ -751,7 +752,14 @@ bool ContentSettingSingleRadioGroup::settings_changed() const {
 // content type and setting the default value based on the content setting.
 void ContentSettingSingleRadioGroup::SetRadioGroup() {
   const GURL& url = web_contents()->GetURL();
+#if defined(GOOROOM_BUILD)
+  GURL changed_url = GooroomURLRewrite::ChangeGooroomScheme(url);
+  base::string16 display_host = url_formatter::FormatUrlForSecurityDisplay(changed_url);
+  if (display_host.empty())
+    display_host = base::ASCIIToUTF16(changed_url.spec());
+#else
   base::string16 display_host = url_formatter::FormatUrlForSecurityDisplay(url);
+#endif
 
   TabSpecificContentSettings* content_settings =
       TabSpecificContentSettings::FromWebContents(web_contents());
diff --git a/components/error_page/common/localized_error.cc b/components/error_page/common/localized_error.cc
index ea9bf73be716..f7f33e189368 100644
--- a/components/error_page/common/localized_error.cc
+++ b/components/error_page/common/localized_error.cc
@@ -9,6 +9,7 @@
 #include <memory>
 #include <utility>
 
+#include "gooroom/URLRewrite/gooroom_url_rewrite.h"
 #include "base/command_line.h"
 #include "base/i18n/rtl.h"
 #include "base/logging.h"
@@ -893,7 +894,6 @@ LocalizedError::PageState LocalizedError::GetPageState(
     SUGGEST_NONE,
     SHOW_NO_BUTTONS,
   };
-
   const LocalizedErrorMap* error_map = LookupErrorMap(error_domain, error_code,
                                                       is_post);
   if (error_map)
@@ -911,9 +911,17 @@ LocalizedError::PageState LocalizedError::GetPageState(
     options.buttons = SHOW_BUTTON_RELOAD;
   }
 
+#if defined(GOOROOM_BUILD)
+  GURL changed_failed_url = GooroomURLRewrite::ChangeGooroomScheme(failed_url);
+  base::string16 failed_url_string(url_formatter::FormatUrl(
+      changed_failed_url, url_formatter::kFormatUrlOmitNothing,
+      net::UnescapeRule::NORMAL, nullptr, nullptr, nullptr));
+#else
   base::string16 failed_url_string(url_formatter::FormatUrl(
       failed_url, url_formatter::kFormatUrlOmitNothing,
       net::UnescapeRule::NORMAL, nullptr, nullptr, nullptr));
+#endif
+
   // URLs are always LTR.
   if (base::i18n::IsRTL())
     base::i18n::WrapStringWithLTRFormatting(&failed_url_string);
-- 
2.20.1

