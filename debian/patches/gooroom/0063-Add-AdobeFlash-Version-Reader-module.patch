From 1c5f1b1cd0e9b26c21d638949441d4a8b3872cb6 Mon Sep 17 00:00:00 2001
From: JunSung Choi <junsungc@gooroom.kr>
Date: Wed, 24 Jul 2019 05:44:09 +0900
Subject: [PATCH 3/3] Add AdobeFlash-Version Reader module

---
 content/browser/web_contents/web_contents_impl.cc |  5 ++--
 gooroom/BUILD.gn                                  |  3 +++
 gooroom/browser/gooroom_pref.cc                   | 15 ++++++++---
 gooroom/flash/flash_version.cc                    | 32 +++++++++++++++++++++++
 gooroom/flash/flash_version.h                     | 13 +++++++++
 5 files changed, 62 insertions(+), 6 deletions(-)
 create mode 100644 gooroom/flash/flash_version.cc
 create mode 100644 gooroom/flash/flash_version.h

diff --git a/content/browser/web_contents/web_contents_impl.cc b/content/browser/web_contents/web_contents_impl.cc
index 8a9b19152..5959ba4a8 100644
--- a/content/browser/web_contents/web_contents_impl.cc
+++ b/content/browser/web_contents/web_contents_impl.cc
@@ -4258,7 +4258,6 @@ bool RequestCurrentUserDataDir(GURL url) {
       "--user-data-dir=" + home_path_dir.AsUTF8Unsafe() +
       "/.config/gooroom/untrust";
   std::string flash_dir = "--ppapi-flash-path=/usr/lib/adobe-flashplugin/libpepflashplayer.so";
-  std::string flash_version = "--ppapi-flash-version=32.0.0.192";
 
   if (trusted) {
     pid = fork();
@@ -4266,7 +4265,7 @@ bool RequestCurrentUserDataDir(GURL url) {
       return true;  // true is blank.. false is continue.
     } else {
       execl(exe_path.c_str(), "gooroom-browser",
-            trust_user_data_dir_option.c_str(), flash_dir.c_str(), flash_version.c_str(), url.spec().c_str(), NULL);
+            trust_user_data_dir_option.c_str(), flash_dir.c_str(), url.spec().c_str(), NULL);
       exit(0);
     }
   } else {
@@ -4275,7 +4274,7 @@ bool RequestCurrentUserDataDir(GURL url) {
       return true;
     } else {
       execl(exe_path.c_str(), "gooroom-browser",
-            untrust_user_data_dir_option.c_str(), flash_dir.c_str(), flash_version.c_str(), url.spec().c_str(), NULL);
+            untrust_user_data_dir_option.c_str(), flash_dir.c_str(), url.spec().c_str(), NULL);
       exit(0);
     }
   }
diff --git a/gooroom/BUILD.gn b/gooroom/BUILD.gn
index c20d46467..fd0453d80 100644
--- a/gooroom/BUILD.gn
+++ b/gooroom/BUILD.gn
@@ -267,6 +267,9 @@ if (!is_android && !is_mac) {
         # for commit #18
         "content/gooroom_safety_policy_part.cc",
         "content/gooroom_safety_policy_part.h",
+
+        "flash/flash_version.h",
+        "flash/flash_version.cc",
       ]
     }
   }
diff --git a/gooroom/browser/gooroom_pref.cc b/gooroom/browser/gooroom_pref.cc
index 69384cadf..d34c8d7bb 100644
--- a/gooroom/browser/gooroom_pref.cc
+++ b/gooroom/browser/gooroom_pref.cc
@@ -8,6 +8,7 @@
 #include "verify_signature.h"
 #include "gooroom/base/gooroom_base.h"
 #include "gooroom/browser/gooroom_url_filter_impl.h"
+#include "gooroom/flash/flash_version.h"
 
 #include "base/command_line.h"
 #include "base/path_service.h"
@@ -273,6 +274,7 @@ GooroomUrlFilterImpl* GooroomPref::setMainpref() {
   if (p != nullptr)
     pfilterImpl->setWhiteList(p->GetValue());
   base::GetGooroomBase()->setUrlFilter(pfilterImpl);
+
   return pfilterImpl;
 }
 
@@ -301,7 +303,6 @@ void GooroomPref::setup() {
       "--user-data-dir=" + home_path_dir.AsUTF8Unsafe() +
       "/.config/gooroom/untrust";
   std::string flash_dir = "--ppapi-flash-path=/usr/lib/adobe-flashplugin/libpepflashplayer.so";
-  std::string flash_version = "--ppapi-flash-version=32.0.0.192";
 
   bool use_user_data_dir = false;
 
@@ -331,7 +332,7 @@ void GooroomPref::setup() {
           exit(0);
         } else {
           execl(exe_path.c_str(), "gooroom-browser",
-                trust_user_data_dir_option.c_str(), flash_dir.c_str(), flash_version.c_str(), GURL(*it).spec().c_str(),
+                trust_user_data_dir_option.c_str(), flash_dir.c_str(), GURL(*it).spec().c_str(),
                 NULL);
           exit(0);
         }
@@ -341,7 +342,7 @@ void GooroomPref::setup() {
           exit(0);
         } else {
           execl(exe_path.c_str(), "gooroom-browser",
-                untrust_user_data_dir_option.c_str(),flash_dir.c_str(), flash_version.c_str(), GURL(*it).spec().c_str(),
+                untrust_user_data_dir_option.c_str(),flash_dir.c_str(), GURL(*it).spec().c_str(),
                 NULL);
           exit(0);
         }
@@ -388,6 +389,14 @@ void GooroomPref::setup() {
     snprintf(buff, sizeof(buff), "POLICY DIR=$(%s)", policies_path.AsUTF8Unsafe().c_str());
     SYSLOG(INFO) << buff << " GRMCODE=050005";
   }
+
+  //Add Flash version
+  if(base::CommandLine::ForCurrentProcess()->HasSwitch(switches::kPpapiFlashPath))
+  {
+    std::string flashVersion = FlashVersion::GetFlashVersion();
+    base::CommandLine::ForCurrentProcess()->AppendSwitchASCII(switches::kPpapiFlashVersion, flashVersion);
+  }
+
 }
 
 bool GooroomPref::useWebSocket() {
diff --git a/gooroom/flash/flash_version.cc b/gooroom/flash/flash_version.cc
new file mode 100644
index 000000000..eb352296e
--- /dev/null
+++ b/gooroom/flash/flash_version.cc
@@ -0,0 +1,32 @@
+#include "flash_version.h"
+
+std::string FlashVersion::GetFlashVersion()
+{
+  std::string line;
+  std::ifstream flash_manifest_json("/usr/lib/adobe-flashplugin/manifest.json");
+  if (flash_manifest_json.is_open())
+  {
+    while ( getline (flash_manifest_json, line ))
+    {
+      if(line.find("version") != std::string::npos ){
+        char * stoc = new char[line.size() + 1];
+        std::copy(line.begin(), line.end(), stoc);
+        stoc[line.size()] = '\0';
+        char* findAt;
+        findAt = strchr(stoc, '\"');
+        int i = 0;
+        int a=0, b=0;
+        while( findAt != NULL ) {
+          findAt = strchr(findAt + 1, '\"');
+          if(i==1)
+            a= findAt - stoc + 1;
+          if(i==2)
+            b= findAt - stoc + 1;
+          i++;
+        }
+        flash_manifest_json.close();
+        return line.substr(a, b-a-1);
+      }
+    }
+  }
+}
diff --git a/gooroom/flash/flash_version.h b/gooroom/flash/flash_version.h
new file mode 100644
index 000000000..31e72b7c0
--- /dev/null
+++ b/gooroom/flash/flash_version.h
@@ -0,0 +1,13 @@
+#ifndef FLASH_VERSION_H_
+#define FLASH_VERSION_H_
+
+#include <iostream>
+#include <fstream>
+#include <string.h>
+
+class FlashVersion {
+ public:
+  static std::string GetFlashVersion();
+};
+
+#endif  // FLASH_VERSION_H_
-- 
2.11.0

